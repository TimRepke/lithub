# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: node:24-alpine

variables:
  VITE_LITHUB_API_URL: "/lithub/api"
  VITE_LITHUB_DATA_URL: "/lithub/data"
  VITE_LITHUB_BASE: "/lithub/"
  LITHUB_LOCAL_PATH: "/var/www/lithub/literature-hub"

stages:
  - build
  - test
  - deploy

cache:
  paths:
    - backend/venv/
    - backend/.cache/pip/
    - frontend/node_modules/

build-job:
  stage: build
  script:
    - echo "Building frontend"
    - echo $VITE_LITHUB_API_URL
    - echo $VITE_LITHUB_DATA_URL
    - echo $VITE_LITHUB_BASE
    - cd frontend
    - npm install
    - npm run build-only
  artifacts:
    paths:
      - frontend/dist/
    expire_in: 24 hours

test-lint:
  stage: test
  script:
    - cd frontend
    - node -v
    - npm run lint

test-typing:
  stage: test
  script:
    - cd frontend
    - node -v
    - npm run type-check

.deployment:
  stage: deploy
  tags:
    - metal,lithub
  when: manual
  script:
    - echo "noop"

deploy-frontend:
  extends: .deployment
  script:
    - echo "Deploying to production"
    - pwd
    - whoami
    - groups
    - echo $HOME
    - echo $VITE_LITHUB_API_URL
    - echo $VITE_LITHUB_DATA_URL
    - echo $VITE_LITHUB_BASE
    - echo $LITHUB_LOCAL_PATH
    - cd $LITHUB_LOCAL_PATH
    - sudo chown -R gitlab-runner:gitlab-runner $LITHUB_LOCAL_PATH
    - cd frontend/
    - ls -lisah dist/
    - rm -rf dist/*
    - echo $CI_JOB_TOKEN
    - echo $CI_PROJECT_ID
    - echo $CI_PIPELINE_ID
    - 'JOB_ID=$(curl -s --location --header "JOB-TOKEN: $CI_JOB_TOKEN" "https://gitlab.pik-potsdam.de/api/v4/projects/$CI_PROJECT_ID/pipelines/$CI_PIPELINE_ID/jobs" | jq ''.[] | select( [ .name == "build-job" ] | any) .id'')'
    - echo $JOB_ID
    - 'curl --location --output artifacts.zip --header "JOB-TOKEN: $CI_JOB_TOKEN" "https://gitlab.pik-potsdam.de/api/v4/projects/$CI_PROJECT_ID/jobs/$JOB_ID/artifacts"'
    - unzip artifacts.zip -d dist/
    - mv dist/frontend/dist/* dist/
    - rm -rf dist/frontend/
    - rm artifacts.zip
    - ls -lisah dist/
    - sudo chown -R lithub:lithub $LITHUB_LOCAL_PATH

deploy-backend:
  extends: .deployment
  script:
    - echo "Deploying to production"
    - pwd
    - whoami
    - groups
    - echo $HOME
    - echo $VITE_LITHUB_API_URL
    - echo $VITE_LITHUB_DATA_URL
    - echo $VITE_LITHUB_BASE
    - echo $LITHUB_LOCAL_PATH
    - cd $LITHUB_LOCAL_PATH
    - sudo chown -R gitlab-runner:gitlab-runner $LITHUB_LOCAL_PATH
    - sudo /usr/bin/systemctl stop lithub.service
    - ls -lisah
    - echo "Update repository"
    - git stash  # "reset" softly by stashing (in case files changed)
    - git pull origin main  # pull from origin
    - echo "Set up environment"
    - cd backend
    - rm -rf venv/
    - python3.12 -m venv venv
    - source venv/bin/activate
    - which python
    - python -V
    - echo "Installing requirements"
    - pip install -r requirements.txt
    - echo "Restart service"
    - sudo chown -R lithub:lithub $LITHUB_LOCAL_PATH
    - sudo /usr/bin/systemctl start lithub.service
    - sleep 5
    - sudo /usr/bin/systemctl status lithub.service
